# type: ignore
"""Removing Postgres enums

Revision ID: 347b7adb6dac
Revises: adf80af66b11
Create Date: 2020-10-01 07:05:33.775129

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "347b7adb6dac"
down_revision = "adf80af66b11"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("dispatches", "mode")
    postgresql.ENUM(name="dispatchmodes").drop(op.get_bind(), checkfirst=True)
    op.add_column(
        "dispatches", sa.Column("mode", sa.VARCHAR(length=30), autoincrement=False),
    )

    op.drop_column("dispatches", "status")
    postgresql.ENUM(name="dispatchstatus").drop(op.get_bind(), checkfirst=True)
    op.add_column(
        "dispatches", sa.Column("status", sa.VARCHAR(length=30), autoincrement=False),
    )

    op.drop_column("dispatches", "event_type")
    postgresql.ENUM(name="eventtypes").drop(op.get_bind(), checkfirst=True)
    op.add_column(
        "dispatches",
        sa.Column("event_type", sa.VARCHAR(length=30), autoincrement=False),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("dispatches", "mode")
    dispatch_modes = postgresql.ENUM(
        "IDLE", "CHG", "DSG", name="dispatchmodes", create_type=False
    )
    dispatch_modes.create(op.get_bind())
    op.add_column(
        "dispatches", sa.Column("mode", dispatch_modes,),
    )

    op.drop_column("dispatches", "status")
    dispatch_status = postgresql.ENUM(
        "PENDING",
        "IN PROGRESS",
        "SUCCESS",
        "FAIL",
        name="dispatchstatus",
        create_type=False,
    )
    dispatch_status.create(op.get_bind())
    op.add_column(
        "dispatches", sa.Column("status", dispatch_status,),
    )

    op.drop_column("dispatches", "event_type")
    event_types = postgresql.ENUM(
        "DR", "ICAP", "DCM", name="eventtypes", create_type=False
    )
    event_types.create(op.get_bind())
    op.add_column(
        "dispatches", sa.Column("event_type", event_types),
    )
    # ### end Alembic commands ###
