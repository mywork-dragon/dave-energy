"""Added pointid to history table

Revision ID: b3a8bb5be345
Revises: 7da441eda3fd
Create Date: 2020-06-25 08:02:19.698578

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b3a8bb5be345'
down_revision = '7da441eda3fd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('history', sa.Column('pointid', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_history_pointid_points'), 'history', 'points', ['pointid'], ['id'])
    # ### end Alembic commands ###

    # Notice above nullable is True for the new column, this is needed since when the column is added
    # the table has existing rows which won't have a value for the column
    # Next we set the new column based on points.id for the row with points.name == history.point_id
    op.execute("UPDATE history hist SET pointid = (select id from points where name = hist.point_id)")
    # The new column should have a value for all rows, we can now set it to not null
    op.alter_column('history', 'pointid', nullable=False)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_history_pointid_points'), 'history', type_='foreignkey')
    op.drop_column('history', 'pointid')
    # ### end Alembic commands ###
