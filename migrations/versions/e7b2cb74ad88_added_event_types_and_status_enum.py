# type: ignore
"""added_event_types_and_status_enum

Revision ID: e7b2cb74ad88
Revises: 16ef2602f0da
Create Date: 2020-08-13 21:11:55.942733

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e7b2cb74ad88"
down_revision = "16ef2602f0da"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("dispatches", "event_type")
    postgresql.ENUM(name="eventtypes").drop(op.get_bind(), checkfirst=True)
    event_types = postgresql.ENUM(
        "DEMAND_REPSONSE", "ICAP", "DCM", name="eventtypes", create_type=False,
    )
    event_types.create(op.get_bind())
    op.add_column("dispatches", sa.Column("event_type", event_types, nullable=True))
    # ### end Alembic commands ###

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("dispatches", "status")
    postgresql.ENUM(name="dispatchstatus").drop(op.get_bind(), checkfirst=True)
    dispatch_status = postgresql.ENUM(
        "PENDING",
        "IN_PROGRESS",
        "SUCCESS",
        "FAIL",
        name="dispatchstatus",
        create_type=False,
    )
    dispatch_status.create(op.get_bind())
    op.add_column(
        "dispatches",
        sa.Column("status", dispatch_status, nullable=True, server_default="FAIL"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("dispatches", "event_type")
    postgresql.ENUM(name="eventtypes").drop(op.get_bind(), checkfirst=True)
    event_types = postgresql.ENUM(
        "DEMAND_REPSONSE", "ICAP", name="eventtypes", create_type=False,
    )
    event_types.create(op.get_bind())
    op.add_column("dispatches", sa.Column("event_type", event_types, nullable=True))
    # ### end Alembic commands ###

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("dispatches", "status")
    postgresql.ENUM(name="dispatchstatus").drop(op.get_bind(), checkfirst=True)
    dispatch_status = postgresql.ENUM(
        "PENDING", "SUCCESS", "FAIL", name="dispatchstatus", create_type=False,
    )
    dispatch_status.create(op.get_bind())
    op.add_column(
        "dispatches",
        sa.Column("status", dispatch_status, nullable=True, server_default="FAIL"),
    )
    # ### end Alembic commands ###
